version: "3.3"

networks:
  exp-ledger:
    external: false

services:
  git-server:
    container_name: gitserver
    image: gitea/gitea:latest
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - DB_TYPE=mysql
      - DB_HOST=git-db:3306
      - DB_NAME=gitea
      - DB_USER=gitea
      - DB_PASSWD=gitea
    restart: always
    networks:
      - exp-ledger
    volumes:
      - ./gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3000:3000"
      - "222:22"
    depends_on:
      - git-db
  
  git-db:
    container_name: git-db
    image: mysql:5.7
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=gitea
      - MYSQL_USER=gitea
      - MYSQL_PASSWORD=gitea
      - MYSQL_DATABASE=gitea
    networks:
      - exp-ledger
    volumes:
      - ./mysql:/var/lib/mysql

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    depends_on:
      - git-server
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - '2181:2181'      
    networks:
      - exp-ledger      

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    networks:
      - exp-ledger      
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "gitoperator-in:1:1:compact,gitoperator-out:1:1:compact"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # rdb:
  #   container_name: rdb
  #   image: mongo:latest
  #   networks:
  #     - exp-ledger
  #   ports:
  #     - "27017-27019:27017-27019"
  #   volumes:
  #     - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
  #     - ./mongo-volume:/data/db
  #   environment:
  #     MONGO_ROOT_PWD: toor
  #     MONGO_INITDB_DATABASE: TestRepository
  #     MONGO_INITDB_ROOT_USERNAME: xqledger
  #     MONGO_INITDB_ROOT_PASSWORD: toor
  #     MONGO_WIREDTIGER_CACHE_SIZE_GB: '4.21'
  #     MONGO_EXTRA_ARGS: '--ipv6 --quiet'
  #   restart: always


volumes:
  localreposlocation:
    driver: local
  data01:
    driver: local
  data02:
    driver: local
  filebeat: